{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","console","log","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","imagen","GifExpertApp","divRoot","document","getElementById","ReactDOM","render"],"mappings":"uKAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,qBAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEPC,QAAQC,IAAIF,GAENG,EAAOH,EAAKI,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAKU,EAAIG,OAAOC,iBAAiBd,QAZtB,kBAkBZQ,GAlBY,4CAAH,sDCGPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,IAEpC,OACI,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAOjB,EAAKkB,IAAON,IACxB,mBAAGI,UAAW,QAAd,SAAuBJ,QCHtBO,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBlC,OAbJC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAEZ,CAACtB,IAEOuB,EDhBoBM,CAAa7B,GAAhC8B,EAFuB,EAE5BvB,KAAae,EAFe,EAEfA,QAWpB,OACI,qCACI,oBAAIJ,UAAY,oCAAhB,SAAqDlB,IACpDsB,GAAW,mBAAGJ,UAAY,mCAAf,wBACZ,qBAAKA,UAAY,WAAjB,SAEIY,EAAOnB,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEUhBkB,EA9BM,WAAM,MAGa7C,mBAAS,CAAC,cAHvB,mBAGhBQ,EAHgB,KAGJT,EAHI,KAavB,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWiB,KAAI,SAAAX,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAYA,GADLA,YCvBrBgC,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.924146b3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue ,...categories]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=kGkIhvg51VC47UrgHmwao1Gn0W0I4eCG&q=${encodeURI(category)}&limit=5`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    console.log(data);\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    // DEVUELVE UNA PROMESA QUE RESUELVE LA COLECCIÓN DE LAS IMÁGENES.\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce\">\r\n            <img src = {url} alt = {title}/>\r\n            <p className= \"title\">{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/*,*{useEffect, useState}*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:imagen, loading} = useFetchGifs(category);\r\n\r\n    //const [imagen, setImagen] = useState([]);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => setImagen(imgs));\r\n    }, [category])\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className = \"animate__animated animate__flash\">Loading...</p>}\r\n            <div className = \"cardGrid\">\r\n            {   \r\n                imagen.map(img => ( \r\n                    <GifGridItem\r\n                    key = {img.id}\r\n                    {...img} />\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 2000);\r\n        })\r\n    }, [category])\r\n\r\n        return state;\r\n    }","// SNIPPETS: RAFC.\r\n\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // NO: const categories = ['One Punch', 'Naruto', 'Dragon Ball', 'Death Note', 'Monster', 'Fullmetal Alchemist'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*\r\n    const handleAdd = () => {\r\n        // LE CAE ENCIMA A TODO LO QUE HAY EN CATEGORIES.\r\n        setCategories([...categories, 'Vinland Saga']);\r\n        //setCategories(cat => [...cat], 'Code Geass');\r\n    }\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                    <GifGrid \r\n                    key = {category}\r\n                    category = {category} />))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}